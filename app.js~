var express = require('express') ;
var bodyParser = require('body-parser');
var path = require('path') ;
var app = express();
var cookieParser = require('cookie-parser') ;
var session = require("express-session") ;
var mongoose = require("mongoose") ;

mongoose.connect('mongodb://root:root@ds117625.mlab.com:17625/studentp');

app.use(bodyParser()) ;
app.use(cookieParser());
var sess;
app.set('view engine','ejs') ;
var jsonParser = bodyParser.json();
app.use(session({secret: 'ssshhhhh',saveUninitialized: true,resave: true}));
app.engine('html', require('ejs').renderFile);
var urlencodedParser = bodyParser.urlencoded({ extended: true });

app.use(express.static(__dirname+'/views')) ;


app.get('/',function(req,res) {
  sess = req.session;
  res.render(__dirname+"/views/index.ejs",{sess}) ;
});

app.get('/profile',function(req,res){
   sess = req.session ;
   res.render(__dirname+"/views/profile.ejs") ;
});






//Schema for student registration
var studentSchema = mongoose.Schema({
    uname:String,
    fname :String,
    lname:String,
    email:String,
    sid:String,
    mobile:Number,
    pwd:String,
 });
var Student = mongoose.model("Student", studentSchema);


app.post('/stu_reg',function (req,res) {
		var clientInfo = req.body; //Get the parsed information
		if(!clientInfo.uname || !clientInfo.fname || !clientInfo.lname)
		{
			res.end('Fill all the fields');
		}
		else{
		        var newStudent = new Student({

                                  uname :clientInfo.uname,
                                  fname :clientInfo.fname,
                                  lname : clientInfo.lname,
                                  email : clientInfo.email,
                                  sid : clientInfo.sid,
                                  pwd : clientInfo.pwd,
                                  mobile : clientInfo.mobile,
                                  
			      });
            newStudent.save(function(err, Student){
			        if(err) res.end('Database Error');
			        else res.redirect('/');
            });
          }
});

app.post('/stu_login',function (req,res) {
  //retrieving the values from the database using findone method
var students =  Student.findOne({uname: req.body.username, pwd: req.body.password}, function(err, user){
        if(err) {
            console.log(err);
        }
        else if(user){
          sess=req.session;
          sess.uname=req.body.username;
          sess.authenticated = true;
          res.redirect('/');
        }
        else {
            console.log('Invalid1');
        }
    });
});
//Login code ends here
//Log out Code
app.get('/logout', function(req, res){
  // destroy the user's session to log them out
  // will be re-created next request
  sess = req.session;
  if (sess) {
    req.session.destroy(function(err){
      if(err) throw err ;

      res.redirect('/') ;
    });

  }else {
    res.redirect('/') ;
  }


});
//Log out code ends here


//For Invalid urls
app.get('*',function(req,res) {
  res.end("Invlid URL") ;
});


app.listen(8080) ;
